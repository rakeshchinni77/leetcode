class Solution {
public:
    //reverse the 2nd half
    ListNode* reverseList(ListNode* rev) {
        ListNode* prev = nullptr;
        ListNode* curr = rev;
        while(curr) {
            ListNode* next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
    void reorderList(ListNode* head) {
      ListNode* slow = head;
      ListNode* fast = head;
      while(fast->next && fast->next->next) {
        slow = slow->next;
        fast = fast->next->next;
      }  
      ListNode* list2 = reverseList(slow->next); 
      slow->next = nullptr;
      ListNode* list1 = head;
      //merge
      while(list1 && list2) {
        ListNode* n1 = list1->next;
        ListNode* n2 = list2->next;
        list1->next = list2;
        if(list1 == nullptr) return;
        list2->next = n1;
        list1 = n1;
        list2 = n2;
      }
    }
};
