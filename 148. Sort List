class Solution {
public:
    //merge
    ListNode* mergeTwoLists(ListNode* list1,ListNode* list2) {
        ListNode dummy(0);
        ListNode* tail = &dummy;
        while(list1 && list2) {
            if(list1->val < list2->val) {
                tail->next = list1;
                list1 = list1->next;
            }
            else {
                tail->next = list2;
                list2 = list2->next;
            }
            tail = tail->next;
        }
        if(list1) {
            tail->next = list1;
        }
        if(list2) {
            tail->next = list2;
        }
        return dummy.next;
    }
    ListNode* sortList(ListNode* head) {
        if(!head || !head->next) return head;
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast->next && fast->next->next) {
            slow = slow->next;
            fast = fast->next->next;
        }
        //cut into two
        ListNode* mid = slow->next;
        slow->next = nullptr;
        //merge sort
        ListNode* left = sortList(head);
        ListNode* right = sortList(mid);
        return mergeTwoLists(left,right);
    }
};
