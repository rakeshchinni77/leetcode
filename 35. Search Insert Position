class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        
        auto it = lower_bound(nums.begin(),nums.end(),target);
        return it-nums.begin();
     
    }
    
    
};
/*
int n=nums.size();
    for (int i=0;i<n;i++) {
        if(nums[i]==target) {
        return i;
       }
       else if(nums[i] > target) {
        return i;
        }
    }
   
return n;
binary search..
int n;
        n=nums.size();
        int l=0,r=n-1;
        while(l<=r) {
            int mid=(l+r)/2;
            if(nums[mid]==target) {
                return mid;
            }
            else if(nums[mid]<target) {
                l=mid+1;
            }
            else {
                r=mid-1;
            }
        }
        return l;
*/
